apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
- script: |
    set -e
    set -o pipefail

    # These variables need to be maintained according to the component matrix: https://spaces.redhat.com/display/GITOPS/GitOps+Component+Matrix
    expected_kustomizeVersion='v4.4.1'
    expected_helmVersion='v3.8.0'
    expected_argocdVersion='v2.3.7'
    expected_appsetVersion='v0.4.1'
    expected_dexVersion='v2.30.3'

    # redis Image version1-171.1654147905
    # https://catalog.redhat.com/software/containers/rhel8/redis-5/5c401b0cbed8bd75a2c4c287
    expected_redisImageSha='b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e'

    gitops_server_pod=$(oc get -n openshift-gitops pods \
      -o custom-columns=NAME:.metadata.name --no-headers | \
      grep openshift-gitops-server | \
      head -1
    )
    appset_pod=$(oc get -n openshift-gitops pods \
      -o custom-columns=NAME:.metadata.name --no-headers | \
      grep openshift-gitops-applicationset-controller | \
      head -1
    )
    dex_pod=$(oc get -n openshift-gitops pods \
      -o custom-columns=NAME:.metadata.name --no-headers | \
      grep openshift-gitops-dex-server | \
      head -1
    )
    route=$(oc get route -n openshift-gitops \
      -o custom-columns=NAME:.spec.host --no-headers | \
      grep openshift-gitops-server | \
      head -1
    )

    kustomizeVersion=$(oc -n openshift-gitops exec $gitops_server_pod \
      -- kustomize version | \
      awk -F':' '{ print $2 }' | \
      awk '{ print $1 }'
    )
    helmVersion=$(oc -n openshift-gitops exec $gitops_server_pod \
      -- helm version | \
      sed -e 's/version.BuildInfo//' -e 's/\"//g' | \
      awk -F':' '{ print $2 }' | \
      awk -F',' '{ print $1 }'
    )
    argocdVersion=$(oc -n openshift-gitops exec $gitops_server_pod -- \
      argocd version --short --server $route --insecure | \
      grep 'argocd-server' | \
      sed -e 's/\+unknown//' | \
      awk -F' ' '{ print $2 }'
    )
    appsetVersion=$(oc logs -n openshift-gitops $appset_pod | \
      awk 'NR<=1' | \
      awk -F' ' '{ print $6 }'
    )
    dexVersion=$(oc -n openshift-gitops exec $dex_pod -- dex version 2>&1 | \
      grep '^Dex Version' | \
      awk -F': ' '{ print $2 }'
    )
    redisImageSha=$(oc get deployment.apps/openshift-gitops-redis -n openshift-gitops \
    --template '{{range .spec.template.spec.containers}}{{.image}}{{end}}' | cut -d':' -f 2
    )

    if test "${kustomizeVersion}" != "${expected_kustomizeVersion}"; then
      echo "Kustomize version mismatch. Should be ${expected_kustomizeVersion}, is ${kustomizeVersion}"
      exit 1
    fi
    if test "${helmVersion}" != "${expected_helmVersion}"; then
      echo "Helm version mismatch. Should be ${expected_helmVersion}, is ${helmVersion}"
      exit 1
    fi
    if test "${argocdVersion}" != "${expected_argocdVersion}"; then
      echo "ArgoCD version mismatch. Should be ${expected_argocdVersion}, is ${argocdVersion}"
      exit 1
    fi
    if test "${appsetVersion}" != "${expected_appsetVersion}"; then
      echo "ApplicationSet version mismatch. Should be ${expected_appsetVersion}, is ${appsetVersion}"
      exit 1
    fi
    if test "${dexVersion}" != "${expected_dexVersion}"; then
      echo "Dex version mismatch. Should be ${expected_dexVersion}, is ${dexVersion}"
      exit 1
    fi
    if test "${redisImageSha}" != "${expected_redisImageSha}"; then
      echo "Redis Image Sha mismatch. Sha should be ${expected_redisImageSha}, is ${redisImageSha}"
      exit 1
    fi
